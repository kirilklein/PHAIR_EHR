name: 'Causal Pipeline test'

on:
  workflow_dispatch:
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      # â”€â”€â”€ Setup â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clean outputs & create venv
        run: |
          rm -rf ./outputs/causal
          python -m venv .venv
          echo "${{ github.workspace }}/.venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt
      - name: Set Python path
        run: |
          echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      # â”€â”€â”€ Pipeline & Tests â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Run pipeline & estimation checks
        shell: bash
        run: |
          set -euo pipefail

          # Helper: run any corebehrt module with its config
          run_step() {
            module="$1"; config="$2"
            echo
            echo "ðŸ”§ Running corebehrt.$module ($config)"
            python -m corebehrt.$module \
              --config_path corebehrt/configs/causal/$config
          }

          # Helper: check an estimate directory
          run_test() {
            margin="$1"; dir="$2"
            echo
            echo "âœ… Checking estimation in $dir"
            python -m tests.test_main_causal.test_estimate_result \
              --margin "$margin" \
              --dir "./outputs/causal/$dir"
          }

          python tests/pipeline/test.py
          # â”€â”€â”€ Data prep & pretrain â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
          run_step main.create_data                         prepare_and_pretrain/create_data.yaml
          run_step main.prepare_training_data               prepare_and_pretrain/prepare_pretrain.yaml
          run_step main.pretrain                            prepare_and_pretrain/pretrain.yaml

          # â”€â”€â”€ Outcomes & cohort selection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
          run_step main.create_outcomes                     outcomes.yaml
          run_step main.select_cohort                      select_cohort/select_cohort_exposure.yaml
          run_step main_causal.select_cohort_advanced      select_cohort/advanced_extraction.yaml

          run_step main_causal.helper_scripts.extract_criteria helper/extract_criteria.yaml

          # â”€â”€â”€ Prepare initial data â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
          run_step main.prepare_training_data               finetune/prepare_finetune_exposure.yaml

          # â”€â”€â”€ Finetune Exposure & Outcome â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
          run_step main_causal.prepare_ft_exp_y      finetune/prepare_ft_exp_y.yaml
          python tests/pipeline/prepare_data_ft_exp_y.py ./outputs/causal/finetuning/prepared_data
          run_step main_causal.finetune_exp_y         finetune/finetune_exp_y.yaml
          python tests/pipeline/ft_exp_y.py ./outputs/causal/finetuning/ft_exp_y
          run_step main_causal.calibrate_exp_y        finetune/calibrate_exp_y.yaml
          python tests/pipeline/calibrate_exp_y.py --calibrated_dir ./outputs/causal/finetuning/calibrated_predictions/predictions_exposure
          python tests/pipeline/calibrate_exp_y.py --calibrated_dir ./outputs/causal/finetuning/calibrated_predictions/predictions_outcome


